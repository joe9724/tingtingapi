// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingapi/models"
)

// AnalyticsAppOKCode is the HTTP code returned for type AnalyticsAppOK
const AnalyticsAppOKCode int = 200

/*AnalyticsAppOK 登录成功，返回登录信息

swagger:response analyticsAppOK
*/
type AnalyticsAppOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse200 `json:"body"`
}

// NewAnalyticsAppOK creates AnalyticsAppOK with default headers values
func NewAnalyticsAppOK() *AnalyticsAppOK {
	return &AnalyticsAppOK{}
}

// WithPayload adds the payload to the analytics app o k response
func (o *AnalyticsAppOK) WithPayload(payload *models.InlineResponse200) *AnalyticsAppOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the analytics app o k response
func (o *AnalyticsAppOK) SetPayload(payload *models.InlineResponse200) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnalyticsAppOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrAnalyticsAppDefault error

swagger:response analyticsAppDefault
*/
type NrAnalyticsAppDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrAnalyticsAppDefault creates NrAnalyticsAppDefault with default headers values
func NewNrAnalyticsAppDefault(code int) *NrAnalyticsAppDefault {
	if code <= 0 {
		code = 500
	}

	return &NrAnalyticsAppDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the analytics app default response
func (o *NrAnalyticsAppDefault) WithStatusCode(code int) *NrAnalyticsAppDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the analytics app default response
func (o *NrAnalyticsAppDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the analytics app default response
func (o *NrAnalyticsAppDefault) WithPayload(payload *models.Error) *NrAnalyticsAppDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the analytics app default response
func (o *NrAnalyticsAppDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrAnalyticsAppDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
