// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AlbumBookListHandlerFunc turns a function with the right signature into a album book list handler
type AlbumBookListHandlerFunc func(AlbumBookListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AlbumBookListHandlerFunc) Handle(params AlbumBookListParams) middleware.Responder {
	return fn(params)
}

// AlbumBookListHandler interface for that can handle valid album book list params
type AlbumBookListHandler interface {
	Handle(AlbumBookListParams) middleware.Responder
}

// NewAlbumBookList creates a new http.Handler for the album book list operation
func NewAlbumBookList(ctx *middleware.Context, handler AlbumBookListHandler) *AlbumBookList {
	return &AlbumBookList{Context: ctx, Handler: handler}
}

/*AlbumBookList swagger:route GET /album/bookList Book albumBookList

专辑下的书列表

登录接口

*/
type AlbumBookList struct {
	Context *middleware.Context
	Handler AlbumBookListHandler
}

func (o *AlbumBookList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAlbumBookListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
