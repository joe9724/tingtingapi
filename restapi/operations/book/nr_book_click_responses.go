// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingapi/models"
)

// BookClickOKCode is the HTTP code returned for type BookClickOK
const BookClickOKCode int = 200

/*BookClickOK 返回结果

swagger:response bookClickOK
*/
type BookClickOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse200 `json:"body,omitempty"`
}

// NewBookClickOK creates BookClickOK with default headers values
func NewBookClickOK() *BookClickOK {
	return &BookClickOK{}
}

// WithPayload adds the payload to the book click o k response
func (o *BookClickOK) WithPayload(payload *models.InlineResponse200) *BookClickOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book click o k response
func (o *BookClickOK) SetPayload(payload *models.InlineResponse200) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookClickOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrBookClickDefault error

swagger:response bookClickDefault
*/
type NrBookClickDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrBookClickDefault creates NrBookClickDefault with default headers values
func NewNrBookClickDefault(code int) *NrBookClickDefault {
	if code <= 0 {
		code = 500
	}

	return &NrBookClickDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the book click default response
func (o *NrBookClickDefault) WithStatusCode(code int) *NrBookClickDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the book click default response
func (o *NrBookClickDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the book click default response
func (o *NrBookClickDefault) WithPayload(payload *models.Error) *NrBookClickDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book click default response
func (o *NrBookClickDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrBookClickDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
