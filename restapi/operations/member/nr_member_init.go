// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrMemberInitHandlerFunc turns a function with the right signature into a member init handler
type NrMemberInitHandlerFunc func(NrMemberInitParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrMemberInitHandlerFunc) Handle(params NrMemberInitParams) middleware.Responder {
	return fn(params)
}

// NrMemberInitHandler interface for that can handle valid member init params
type NrMemberInitHandler interface {
	Handle(NrMemberInitParams) middleware.Responder
}

// NewNrMemberInit creates a new http.Handler for the member init operation
func NewNrMemberInit(ctx *middleware.Context, handler NrMemberInitHandler) *NrMemberInit {
	return &NrMemberInit{Context: ctx, Handler: handler}
}

/*NrMemberInit swagger:route GET /member/init Member memberInit

启动页接口

启动页接口

*/
type NrMemberInit struct {
	Context *middleware.Context
	Handler NrMemberInitHandler
}

func (o *NrMemberInit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrMemberInitParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
