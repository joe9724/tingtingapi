// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// MsgListHandlerFunc turns a function with the right signature into a msg list handler
type MsgListHandlerFunc func(MsgListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MsgListHandlerFunc) Handle(params MsgListParams) middleware.Responder {
	return fn(params)
}

// MsgListHandler interface for that can handle valid msg list params
type MsgListHandler interface {
	Handle(MsgListParams) middleware.Responder
}

// NewMsgList creates a new http.Handler for the msg list operation
func NewMsgList(ctx *middleware.Context, handler MsgListHandler) *MsgList {
	return &MsgList{Context: ctx, Handler: handler}
}

/*MsgList swagger:route GET /msg/list Member msgList

系统消息列表

系统消息列表

*/
type MsgList struct {
	Context *middleware.Context
	Handler MsgListHandler
}

func (o *MsgList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMsgListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
