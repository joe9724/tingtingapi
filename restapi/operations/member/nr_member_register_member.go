// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrMemberRegisterMemberHandlerFunc turns a function with the right signature into a member register member handler
type NrMemberRegisterMemberHandlerFunc func(NrMemberRegisterMemberParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrMemberRegisterMemberHandlerFunc) Handle(params NrMemberRegisterMemberParams) middleware.Responder {
	return fn(params)
}

// NrMemberRegisterMemberHandler interface for that can handle valid member register member params
type NrMemberRegisterMemberHandler interface {
	Handle(NrMemberRegisterMemberParams) middleware.Responder
}

// NewNrMemberRegisterMember creates a new http.Handler for the member register member operation
func NewNrMemberRegisterMember(ctx *middleware.Context, handler NrMemberRegisterMemberHandler) *NrMemberRegisterMember {
	return &NrMemberRegisterMember{Context: ctx, Handler: handler}
}

/*NrMemberRegisterMember swagger:route POST /member/registerMember Member memberRegisterMember

注册接口

注册接口

*/
type NrMemberRegisterMember struct {
	Context *middleware.Context
	Handler NrMemberRegisterMemberHandler
}

func (o *NrMemberRegisterMember) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrMemberRegisterMemberParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
