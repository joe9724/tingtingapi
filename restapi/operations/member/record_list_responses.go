// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingapi/models"
)

// RecordListOKCode is the HTTP code returned for type RecordListOK
const RecordListOKCode int = 200

/*RecordListOK 200信息

swagger:response recordListOK
*/
type RecordListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20014 `json:"body,omitempty"`
}

// NewRecordListOK creates RecordListOK with default headers values
func NewRecordListOK() *RecordListOK {
	return &RecordListOK{}
}

// WithPayload adds the payload to the record list o k response
func (o *RecordListOK) WithPayload(payload *models.InlineResponse20014) *RecordListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the record list o k response
func (o *RecordListOK) SetPayload(payload *models.InlineResponse20014) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecordListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RecordListDefault error

swagger:response recordListDefault
*/
type RecordListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRecordListDefault creates RecordListDefault with default headers values
func NewRecordListDefault(code int) *RecordListDefault {
	if code <= 0 {
		code = 500
	}

	return &RecordListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the record list default response
func (o *RecordListDefault) WithStatusCode(code int) *RecordListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the record list default response
func (o *RecordListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the record list default response
func (o *RecordListDefault) WithPayload(payload *models.Error) *RecordListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the record list default response
func (o *RecordListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecordListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
