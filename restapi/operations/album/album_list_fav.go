// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AlbumListFavHandlerFunc turns a function with the right signature into a album list fav handler
type AlbumListFavHandlerFunc func(AlbumListFavParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AlbumListFavHandlerFunc) Handle(params AlbumListFavParams) middleware.Responder {
	return fn(params)
}

// AlbumListFavHandler interface for that can handle valid album list fav params
type AlbumListFavHandler interface {
	Handle(AlbumListFavParams) middleware.Responder
}

// NewAlbumListFav creates a new http.Handler for the album list fav operation
func NewAlbumListFav(ctx *middleware.Context, handler AlbumListFavHandler) *AlbumListFav {
	return &AlbumListFav{Context: ctx, Handler: handler}
}

/*AlbumListFav swagger:route GET /album/list/fav Album albumListFav

根据用户信息获取收藏专辑

根据用户信息获取收藏专辑

*/
type AlbumListFav struct {
	Context *middleware.Context
	Handler AlbumListFavHandler
}

func (o *AlbumListFav) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAlbumListFavParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
