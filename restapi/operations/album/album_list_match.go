// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AlbumListMatchHandlerFunc turns a function with the right signature into a album list match handler
type AlbumListMatchHandlerFunc func(AlbumListMatchParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AlbumListMatchHandlerFunc) Handle(params AlbumListMatchParams) middleware.Responder {
	return fn(params)
}

// AlbumListMatchHandler interface for that can handle valid album list match params
type AlbumListMatchHandler interface {
	Handle(AlbumListMatchParams) middleware.Responder
}

// NewAlbumListMatch creates a new http.Handler for the album list match operation
func NewAlbumListMatch(ctx *middleware.Context, handler AlbumListMatchHandler) *AlbumListMatch {
	return &AlbumListMatch{Context: ctx, Handler: handler}
}

/*AlbumListMatch swagger:route GET /album/list/match Album albumListMatch

根据用户信息匹配专辑(备用接口)

根据用户信息匹配专辑

*/
type AlbumListMatch struct {
	Context *middleware.Context
	Handler AlbumListMatchHandler
}

func (o *AlbumListMatch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAlbumListMatchParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
