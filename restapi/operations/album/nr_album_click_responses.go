// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingapi/models"
)

// AlbumClickOKCode is the HTTP code returned for type AlbumClickOK
const AlbumClickOKCode int = 200

/*AlbumClickOK 返回结果

swagger:response albumClickOK
*/
type AlbumClickOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse200 `json:"body,omitempty"`
}

// NewAlbumClickOK creates AlbumClickOK with default headers values
func NewAlbumClickOK() *AlbumClickOK {
	return &AlbumClickOK{}
}

// WithPayload adds the payload to the album click o k response
func (o *AlbumClickOK) WithPayload(payload *models.InlineResponse200) *AlbumClickOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album click o k response
func (o *AlbumClickOK) SetPayload(payload *models.InlineResponse200) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AlbumClickOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrAlbumClickDefault error

swagger:response albumClickDefault
*/
type NrAlbumClickDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrAlbumClickDefault creates NrAlbumClickDefault with default headers values
func NewNrAlbumClickDefault(code int) *NrAlbumClickDefault {
	if code <= 0 {
		code = 500
	}

	return &NrAlbumClickDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the album click default response
func (o *NrAlbumClickDefault) WithStatusCode(code int) *NrAlbumClickDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the album click default response
func (o *NrAlbumClickDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the album click default response
func (o *NrAlbumClickDefault) WithPayload(payload *models.Error) *NrAlbumClickDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album click default response
func (o *NrAlbumClickDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrAlbumClickDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
