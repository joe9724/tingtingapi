// Code generated by go-swagger; DO NOT EDIT.

package chapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingapi/models"
)

// ChapterFavOKCode is the HTTP code returned for type ChapterFavOK
const ChapterFavOKCode int = 200

/*ChapterFavOK 章节详情

swagger:response chapterFavOK
*/
type ChapterFavOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20016 `json:"body,omitempty"`
}

// NewChapterFavOK creates ChapterFavOK with default headers values
func NewChapterFavOK() *ChapterFavOK {
	return &ChapterFavOK{}
}

// WithPayload adds the payload to the chapter fav o k response
func (o *ChapterFavOK) WithPayload(payload *models.InlineResponse20016) *ChapterFavOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter fav o k response
func (o *ChapterFavOK) SetPayload(payload *models.InlineResponse20016) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterFavOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ChapterFavDefault error

swagger:response chapterFavDefault
*/
type ChapterFavDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChapterFavDefault creates ChapterFavDefault with default headers values
func NewChapterFavDefault(code int) *ChapterFavDefault {
	if code <= 0 {
		code = 500
	}

	return &ChapterFavDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the chapter fav default response
func (o *ChapterFavDefault) WithStatusCode(code int) *ChapterFavDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the chapter fav default response
func (o *ChapterFavDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the chapter fav default response
func (o *ChapterFavDefault) WithPayload(payload *models.Error) *ChapterFavDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter fav default response
func (o *ChapterFavDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterFavDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
