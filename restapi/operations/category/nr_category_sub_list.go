// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrCategorySubListHandlerFunc turns a function with the right signature into a category sub list handler
type NrCategorySubListHandlerFunc func(NrCategorySubListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrCategorySubListHandlerFunc) Handle(params NrCategorySubListParams) middleware.Responder {
	return fn(params)
}

// NrCategorySubListHandler interface for that can handle valid category sub list params
type NrCategorySubListHandler interface {
	Handle(NrCategorySubListParams) middleware.Responder
}

// NewNrCategorySubList creates a new http.Handler for the category sub list operation
func NewNrCategorySubList(ctx *middleware.Context, handler NrCategorySubListHandler) *NrCategorySubList {
	return &NrCategorySubList{Context: ctx, Handler: handler}
}

/*NrCategorySubList swagger:route GET /category/sub/list Category categorySubList

获取子类列表

获取子类列表

*/
type NrCategorySubList struct {
	Context *middleware.Context
	Handler NrCategorySubListHandler
}

func (o *NrCategorySubList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrCategorySubListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
