// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InitDataExtraInfo init data extra info
// swagger:model InitData_extraInfo
type InitDataExtraInfo struct {

	// about us Url
	// Required: true
	AboutUsURL *string `json:"aboutUsUrl"`

	// special Url
	// Required: true
	SpecialURL *string `json:"specialUrl"`

	// version Url
	// Required: true
	VersionURL *string `json:"versionUrl"`
}

// Validate validates this init data extra info
func (m *InitDataExtraInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAboutUsURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSpecialURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVersionURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InitDataExtraInfo) validateAboutUsURL(formats strfmt.Registry) error {

	if err := validate.Required("aboutUsUrl", "body", m.AboutUsURL); err != nil {
		return err
	}

	return nil
}

func (m *InitDataExtraInfo) validateSpecialURL(formats strfmt.Registry) error {

	if err := validate.Required("specialUrl", "body", m.SpecialURL); err != nil {
		return err
	}

	return nil
}

func (m *InitDataExtraInfo) validateVersionURL(formats strfmt.Registry) error {

	if err := validate.Required("versionUrl", "body", m.VersionURL); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InitDataExtraInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InitDataExtraInfo) UnmarshalBinary(b []byte) error {
	var res InitDataExtraInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
